data Nat = Z | S Nat 

newNat :: Nat -> BX Nat
newNat n = case n of
  Z -> (|Z|)
  S n' -> (|S (newNat n')|)

check :: BX Nat -> BX (Nat,Nat)
check n = pin n (\x -> newNat x)

int2nat :: Int -> Nat
int2nat 0 = Z
int2nat n = S (int2nat (n - 1))